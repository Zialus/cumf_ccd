environment:
  config: Release
  matrix:
  - CUDA_VERSION: '9.2'
    APPVEYOR_BUILD_WORKER_IMAGE: Ubuntu
  - CUDA_VERSION: '10.0'
    GENERATOR: Visual Studio 15 2017 Win64
    TOOLSET: v141
    APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
  - CUDA_VERSION: '9.2'
    GENERATOR: Visual Studio 15 2017 Win64
    TOOLSET: v140
    APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
  - CUDA_VERSION: '9.1'
    GENERATOR: Visual Studio 15 2017 Win64
    TOOLSET: v140
    APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
  - CUDA_VERSION: '9.0'
    GENERATOR: Visual Studio 15 2017 Win64
    TOOLSET: v140
    APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
  - CUDA_VERSION: '8.0'
    GENERATOR: Visual Studio 14 2015 Win64
    TOOLSET: v140
    APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
  - CUDA_VERSION: '7.5'
    GENERATOR: Visual Studio 12 2013 Win64
    TOOLSET: v120
    APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
  - CUDA_VERSION: '7.0'
    GENERATOR: Visual Studio 12 2013 Win64
    TOOLSET: v120
    APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2013
  - CUDA_VERSION: '6.5'
    GENERATOR: Visual Studio 12 2013 Win64
    TOOLSET: v120
    APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2013

init:
  - ps: systeminfo /fo csv | ConvertFrom-Csv | select OS*, System* | Format-List
  - echo %APPVEYOR_BUILD_WORKER_IMAGE%
  - echo %generator%
  - echo %config%
  - ps: >-
      $env:url = switch ( $env:cuda_version )
      {
        '6.5' { "https://developer.download.nvidia.com/compute/cuda/6_5/rel/installers/cuda_6.5.14_windows_general_64.exe" }
        '7.0' { "https://developer.download.nvidia.com/compute/cuda/7_0/Prod/local_installers/cuda_7.0.28_windows.exe" }
        '7.5' { "https://developer.download.nvidia.com/compute/cuda/7.5/Prod/local_installers/cuda_7.5.18_win10.exe" }
        '8.0' { "https://developer.nvidia.com/compute/cuda/8.0/Prod2/local_installers/cuda_8.0.61_win10-exe" }
        '9.0' { "https://developer.nvidia.com/compute/cuda/9.0/Prod/local_installers/cuda_9.0.176_win10-exe" }
        '9.1' { "https://developer.nvidia.com/compute/cuda/9.1/Prod/local_installers/cuda_9.1.85_win10" }
        '9.2' { "https://developer.nvidia.com/compute/cuda/9.2/Prod2/local_installers/cuda_9.2.148_win10" }
        '10.0' { "https://developer.nvidia.com/compute/cuda/10.0/Prod/local_installers/cuda_10.0.130_411.31_win10" }
      }
  - ps: >-
      $env:arguments = switch ( $env:cuda_version )
      {
        '6.5' { "-s CUDAToolkit_6.5" }
        '7.0' { "-s CUDAToolkit_7.0" }
        '7.5' { "-s CUDAToolkit_7.5" }
        '8.0' { "-s compiler_8.0" }
        '9.0' { "-s compiler_9.0" }
        '9.1' { "-s nvcc_9.1" }
        '9.2' { "-s nvcc_9.2" }
        '10.0' { "-s nvcc_10.0" }
      }
install:
  - ps: appveyor DownloadFile -Url $env:url -FileName C:\cuda.exe
  - C:\cuda.exe %arguments%
  - set CUDA_PATH=%ProgramFiles%\NVIDIA GPU Computing Toolkit\CUDA\v%CUDA_VERSION%
  - set PATH=%CUDA_PATH%\bin;%PATH%
  - nvcc -V
build_script:
  - mkdir build && cd build
  - cmake .. -G "%GENERATOR%" -T %TOOLSET%
  - cmake --build . --config %CONFIG%
artifacts:
  - path: exec

for:
-
  matrix:
    only:
      - APPVEYOR_BUILD_WORKER_IMAGE: Ubuntu

  init:
  - echo $APPVEYOR_BUILD_WORKER_IMAGE
  - uname -a
  install:
  - wget https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1604/x86_64/cuda-repo-ubuntu1604_9.2.148-1_amd64.deb
  - sudo dpkg -i cuda-repo-ubuntu1604_9.2.148-1_amd64.deb
  - sudo apt-key adv --fetch-keys http://developer.download.nvidia.com/compute/cuda/repos/ubuntu1604/x86_64/7fa2af80.pub
  - sudo apt-get update
  - sudo apt-get install cuda -y
  - sudo apt-get clean
  build_script:
  - mkdir build && cd build
  - cmake ..
  - cmake --build .
